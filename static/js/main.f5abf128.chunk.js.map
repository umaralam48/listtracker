{"version":3,"sources":["ListItem.js","AddItem.js","List.js","Lists.js","AddList.js","App.js","index.js"],"names":["ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","setState","name","item","react_default","a","createElement","onClick","handleClick","bind","style","Component","AddItem","id","React","createRef","newItem","e","preventDefault","addItem","current","value","idName","divName","className","ref","onSubmit","handleSubmit","type","uuidv4","require","List","items","key","map","src_ListItem","src_AddItem","Lists","lists","length","listName","src_List","AddList","App","s","assign","concat","obj","push","src_AddList","handleAddList","src_Lists","handleAddItem","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f5abf128.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ListItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { color: 'black' };\n  }\n\n  handleClick() {\n    this.setState({\n      color:  (this.state.color==='gray'?'black':'gray')\n    });\n  }\n\n  render() {\n    var item = this.props.item;\n    var name = item.name;\n\n    return (\n      <span onClick={this.handleClick.bind(this)} style={{ color: this.state.color }}>\n        <strong>{name}</strong>\n      </span>\n    );\n\n  }\n\n}\nexport default ListItem;\n\n","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n\n  constructor() {\n    super();\n    this.id = React.createRef();\n    this.state = {\n      newItem: {}\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n    this.props.addItem(this.id.current.value, this.props.idName);\n    // Implement the rest of this function here!\n  }\n\n\n  render() {\n    var divName = 'add' + this.props.idName;\n    return (\n      <div className='addItemDiv'>\n        <h4>Add {this.props.idName}</h4>\n        <form ref='form' onSubmit={this.handleSubmit.bind(this)}>\n          <div id={divName} ref={divName}>\n            <label>Name</label><br />\n            <input type='text' ref={this.id} />\n          </div>\n          <br />\n          <input type='submit' value='Submit' />\n          <br />\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem.js';\nimport AddItem from './AddItem.js';\nconst uuidv4 = require('uuid');\n\nclass List extends Component {\n\n  render() {\n    var name = this.props.name;\n    var items = this.props.items;\n\n    if (items) {\n      return (\n        <div id={name} key={uuidv4()}>\n          <h3>{name} List</h3>\n          <ul>\n            {items.map(function (item) {\n              return (\n                <li key={uuidv4()}><ListItem item={item} key={uuidv4()} /></li>\n              )\n            })}\n          </ul>\n          <AddItem idName={name} addItem={this.props.addItem} />\n        </div>\n      )\n    }\n    return (\n\n      <div id={name} key={uuidv4()}>\n        <h3>{name} List</h3>\n        <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n      </div>\n    )\n\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport List from './List.js';\nconst uuidv4 = require('uuid');\n\nclass Lists extends Component {\n\n  render() {\n    // If there are no lists, display a relevant message\n    if (this.props.lists.length === 0) {\n      return (\n        <div id=\"listsDiv\" className=\"List\">\n          <h2>Add new lists to get started!</h2>\n        </div>\n      );\n    }\n\n    // Otherwise, for each list, create a div\n    var items = this.props.items;\n    var lists = this.props.lists;\n    var addItem = this.props.addItem;\n    return (\n      <div key={uuidv4()}>\n        {lists.map(function (listName) {\n          return (\n            <List name={listName} items={items[listName]} addItem={addItem} key={uuidv4()} />\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\n\nclass AddList extends Component {\n  constructor(props) {\n    super(props);\n    this.id = React.createRef();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n    this.props.AddList(this.id.current.value);\n  }\n\n  render() {\n    return (\n      <div id=\"addListDiv\">\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <div id='addList'>\n            <label>What will be on your next list?&nbsp;\n    <input type='text' ref={this.id} id='newID'></input>\n            </label>\n          </div><br />\n          <input type='submit' value='Create List' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      lists: [], // this holds the name of each list\n      items: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n    };\n\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n    // Implement this function!\n    let items = Object.assign({}, this.state.items);\n    items[s] = [];\n    this.setState({\n      lists: this.state.lists.concat([s]),\n      items: items\n    });\n\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(item, s) {\n    // Implement this function!\n    let obj = {\n      name: item,\n    };\n    /*let items = Object.assign({}, this.state.items);\n      let currentar = items[s];\n      currentar.push(obj);\n    items[s] = currentar;*/\n    (this.state.items[s]).push(obj);\n    this.setState(\n      {\n        items: this.state.items,\n      }\n    );\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <AddList AddList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists lists={this.state.lists} items={this.state.items} addItem={this.handleAddItem.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}